{"version":3,"sources":["ng://ng-starrating/lib/rating.service.ts","ng://ng-starrating/lib/rating.component.ts","ng://ng-starrating/components/star-rating/star-rating.component.ts","ng://ng-starrating/lib/rating.module.ts"],"names":["RatingService","Injectable","args","providedIn","RatingComponent","prototype","ngOnInit","Component","selector","template","StarRatingComponent","_this","this","onValueChange","Subject","subscribe","generateRating","applySizeAllStars","onCheckedColorChange","applyColorStyleAllStars","onUnCheckedColorChange","onSizeChange","onReadOnlyChange","addRemoveEvents","Object","defineProperty","_checkedColor","value","next","_unCheckedColor","_value","_size","concat","includes","String","_readOnly","makeEditable","stars","forEach","star","nativeElement","addEventListener","rate","bind","makeReadOnly","__zone_symbol__clickfalse","__zone_symbol__mouseoverfalse","readonly","ngAfterViewInit","event","parseInt","dataset","setStars","length","push","star1Element","star2Element","star3Element","star4Element","star5Element","newSize","size","match","halfSize","halfMargin","style","setProperty","classList","contains","setChecked","applyCheckedColorStyle","applyUnCheckedColorStyle","applyColorStyle","starElement","checkedcolor","uncheckedcolor","mainElement","title","hasDecimals_1","Number","parseFloat","toString","substring","i_1","add","ViewChild","Input","RatingModule","NgModule","imports","FormsModule","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RatingService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { StarRatingComponent } from '../components/star-rating/star-rating.component'\n\n@Component({\n  selector: 'lib-rating',\n  template: `\n    <p>\n      rating works!\n    </p>\n  `,\n  styles: []\n})\nexport class RatingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'star-rating',\n  template: `\n  <div #starMain>\n    <span data-index=\"1\" #star1></span>\n    <span data-index=\"2\" #star2></span>\n    <span data-index=\"3\" #star3></span>\n    <span data-index=\"4\" #star4></span>\n    <span data-index=\"5\" #star5></span>\n  </div>\n  <style>\n    :root {\n      --checkedColor: gold;\n      --unCheckedColor: gray;\n      --size: 24px;\n      --halfWidth: 10px;\n      --halfMargin: -20px;\n    }  \n    .star {\n      cursor: pointer;\n      color: var(--unCheckedColor);\n      font-size: var(--size);\n      width: var(--size);\n      display: inline-block;\n    }\n    .star:last-child {\n      margin-right: 0;\n    }\n    .star:before {\n      content:'\\\\2605';\n    }\n    .star.on {\n      color: var(--checkedColor);\n    }\n    .star.half:after {\n      content:'\\\\2605';\n      color: var(--checkedColor);\n      position: absolute;\n      margin-left: var(--halfMargin);\n      width: var(--halfWidth);\n      overflow: hidden;\n    }\n  </style>\n   `\n})\n\nexport class StarRatingComponent {\n  private stars = [];\n  private _checkedColor: string;\n  private _unCheckedColor: string;\n  private _value: number;\n  private _size: string;\n  private _readOnly: boolean = false;\n\n  private onValueChange: Subject<number>;\n  private onCheckedColorChange: Subject<string>;\n  private onUnCheckedColorChange: Subject<string>;\n  private onSizeChange: Subject<string>;\n  private onReadOnlyChange: Subject<boolean>;\n\n  @ViewChild('starMain') private mainElement: ElementRef;\n  @ViewChild('star1') private star1Element: ElementRef;\n  @ViewChild('star2') private star2Element: ElementRef;\n  @ViewChild('star3') private star3Element: ElementRef;\n  @ViewChild('star4') private star4Element: ElementRef;\n  @ViewChild('star5') private star5Element: ElementRef;\n\n  constructor() {\n    if (!this.onValueChange) {\n      this.onValueChange = new Subject();\n      this.onValueChange.subscribe(() => {\n        this.generateRating();\n        this.applySizeAllStars();\n      });\n    }\n\n    if (!this.onCheckedColorChange) {\n      this.onCheckedColorChange = new Subject();\n      this.onCheckedColorChange.subscribe(() => {\n        this.applyColorStyleAllStars(true);\n      });\n    }\n\n    if (!this.onUnCheckedColorChange) {\n      this.onUnCheckedColorChange = new Subject();\n      this.onUnCheckedColorChange.subscribe(() => {\n        this.applyColorStyleAllStars(false);\n      });\n    }\n\n    if (!this.onSizeChange) {\n      this.onSizeChange = new Subject();\n      this.onSizeChange.subscribe(() => {\n        this.applySizeAllStars();\n      });\n    }\n\n    if (!this.onReadOnlyChange) {\n      this.onReadOnlyChange = new Subject();\n      this.onReadOnlyChange.subscribe(() => {\n        this.addRemoveEvents();\n      });\n    }\n  }\n\n  get checkedcolor(): string {\n    return this._checkedColor;\n  }\n\n  get uncheckedcolor(): string {\n    return this._unCheckedColor;\n  }\n\n  get value(): number {\n    return this._value;\n  }\n\n  get size(): string {\n    return this._size.concat((!this._size.includes(\"px\") ? \"px\" : \"\"));\n  }\n\n  get readonly(): boolean {\n    return String(this._readOnly) === \"true\";\n  }\n\n  @Input('checkedcolor') set checkedcolor(value: string) {\n    this._checkedColor = value;\n    if (this._checkedColor) {\n      this.onCheckedColorChange.next(this._checkedColor);\n    }\n  }\n\n  @Input('uncheckedcolor') set uncheckedcolor(value: string) {\n    this._unCheckedColor = value;\n    if (this._unCheckedColor) {\n      this.onUnCheckedColorChange.next(this._unCheckedColor);\n    }\n  }\n\n  @Input('value') set value(value: number) {\n    if (!value || value == null) {\n      value = 0;\n    }\n\n    if (value > 5) {\n      value = 5;\n    }\n\n    this._value = value;\n\n    if (this._value >= 0) {\n      this.onValueChange.next(this._value);\n    }\n  }\n\n  @Input('size') set size(value: string) {\n    if (!value || value == null || value == \"0px\") {\n      value = \"24px\";\n    }\n    this._size = value;\n    this.onSizeChange.next(this._size);\n  }\n\n  @Input('readonly') set readonly(value: boolean) {\n    this._readOnly = value;\n    this.onReadOnlyChange.next(value);\n  }\n\n  private makeEditable() {\n    this.stars.forEach(star => {\n      star.nativeElement.addEventListener('click', this.rate.bind(this));\n      star.nativeElement.addEventListener('mouseover', this.rate.bind(this));\n    });\n  }\n\n  private makeReadOnly() {\n    this.stars.forEach((star:ElementRef) => {\n      star.nativeElement.__zone_symbol__clickfalse = null;\n      star.nativeElement.__zone_symbol__mouseoverfalse = null;\n    });\n  }\n\n  private addRemoveEvents() {\n    if (this.readonly) {\n      this.makeReadOnly();\n    } else {\n      this.makeEditable();\n      this.onValueChange.next(this.value);\n    }\n  }\n\n  private ngAfterViewInit() {\n  }\n\n  private rate(event:MouseEvent) {\n    let star:HTMLElement = <HTMLElement> event.srcElement;\n    this.value = parseInt(star.dataset.index);\n    if (this.value == 0) {\n      this.value = 1;\n    }\n  }\n\n  private setStars() {\n    if (this.stars.length == 0) {\n      this.stars.push(this.star1Element);\n      this.stars.push(this.star2Element);\n      this.stars.push(this.star3Element);\n      this.stars.push(this.star4Element);\n      this.stars.push(this.star5Element);\n    }\n  }\n\n  private applySizeAllStars() {\n    if (this._size) {\n      this.stars.forEach((star:ElementRef) => {\n        let newSize = this.size.match(/\\d+/)[0];\n        let halfSize = (parseInt(newSize) * 10) / 24;\n        let halfMargin = 0 - ((parseInt(newSize) * 20) / 24);\n        star.nativeElement.style.setProperty('--size', this.size);\n        if (star.nativeElement.classList.contains(\"half\")) {\n          star.nativeElement.style.setProperty('--halfWidth', `${halfSize}px`);\n          star.nativeElement.style.setProperty('--halfMargin', `${halfMargin}px`);\n        }\n      });\n    }\n  }\n\n  private applyColorStyleAllStars(setChecked: boolean) {\n    this.stars.forEach(star => {\n      if (setChecked) {\n        this.applyCheckedColorStyle(star.nativeElement);\n      } else {\n        this.applyUnCheckedColorStyle(star.nativeElement);\n      }\n    });\n  }\n\n  private applyColorStyle(starElement: HTMLSpanElement) {\n    this.applyCheckedColorStyle(starElement);\n    this.applyUnCheckedColorStyle(starElement);\n  }\n\n  private applyCheckedColorStyle(starElement: HTMLSpanElement) {\n    starElement.style.setProperty('--checkedColor', this.checkedcolor);\n  }\n\n  private applyUnCheckedColorStyle(starElement: HTMLSpanElement) {\n    starElement.style.setProperty('--unCheckedColor', this.uncheckedcolor);\n  }\n\n  private generateRating() {\n    if (this.readonly) {\n      return;\n    }\n    this.setStars();\n    if (this.value >= 0) {\n      this.mainElement.nativeElement.title = this.value;\n\n      let hasDecimals: boolean =\n        ((Number.parseFloat(this.value.toString()) % 1)\n          .toString()\n          .substring(3, 2)) ? true : false;\n\n      let i = 1;\n      this.stars.forEach(star => {\n        star.nativeElement.classList = [];\n        this.applyColorStyle(star.nativeElement);\n        star.nativeElement.classList.add(\"star\");\n\n        if (this.value >= i) {\n          // star on\n          star.nativeElement.classList.add(\"on\");\n        } else {\n          // hald star\n          if (hasDecimals) {\n            star.nativeElement.classList.add(\"half\");\n            hasDecimals = false;\n          }\n        }\n        i++;\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RatingComponent } from './rating.component';\nimport { StarRatingComponent } from '../components/star-rating/star-rating.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule\n  ],\n  declarations: [\n    RatingComponent, \n    StarRatingComponent],\n  exports: [StarRatingComponent]\n  //entryComponents: [StarRatingComponent]\n})\nexport class RatingModule { }\n"]}